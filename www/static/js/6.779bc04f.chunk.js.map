{"version":3,"sources":["pages/home/home/children/header/header.js","pages/home/home/children/Swiper/SwiperDemo.js","pages/home/home/children/content/content.js","pages/home/home/home.js"],"names":["props","className","onClick","history","push","banner","id","imgUrl","title","SwiperDemo","swiper","createRef","ref","this","map","item","key","src","alt","Swiper","current","direction","loop","Component","MainContentList","content","SWiper","ContentList","length","ListDom","SwiperDom","restDom","PushDetailRoute","bind","objectType","cover","viewCount","index","creatorObj","username","publishTimeDiffStr","LoadMoreData","objType","getMoreContentData","FetchContentData","slidesPerView","getContentData","console","log","PureComponent","connect","state","maincontent","dispatch","action","requestContentData","requestMoreContentData","home","el","scroll","SCroll","window","IScroll","probeType","scrollY","on","refresh"],"mappings":"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","file":"static/js/6.779bc04f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.scss'\r\nexport default (props)=>{\r\n    \r\n    return(\r\n        <div className=\"header\">\r\n            <h1>首页</h1>\r\n            <div className=\"icon\">\r\n                <span className=\"app-react iconfont icon-yingyong\"></span>\r\n                <span className=\"app-search iconfont icon-search\" onClick={()=>{\r\n                    props.props.history.push('/home/search');\r\n                }}></span>\r\n            </div>\r\n        </div>\r\n    )\r\n        \r\n}\r\n","import React, { Component,createRef} from 'react'\r\nimport './Swiper.scss'\r\nimport Swiper from 'swiper';\r\nconst banner = [\r\n    {id:1,imgUrl:'https://axhub.im/pro/511b96895ac139d6/images/%E9%A6%96%E9%A1%B5/u3142.png',title:'如何让你的设计变得更有商业价值'},\r\n    {id:2,imgUrl:'https://axhub.im/pro/511b96895ac139d6/images/%E9%A6%96%E9%A1%B5/u3144.png',title:'VR游戏市场将增长75%'},\r\n    {id:3,imgUrl:'https://axhub.im/pro/511b96895ac139d6/images/%E9%A6%96%E9%A1%B5/u3146.png',title:'智慧出行|ADAS体验设计的多维度剖析'},\r\n]\r\n\r\nexport default class SwiperDemo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.swiper = createRef();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"swiper-container\" ref={this.swiper}>\r\n                <div className=\"swiper-wrapper\">\r\n                    {\r\n                        banner.map(item=>(\r\n                            <div className=\"swiper-slide\" key={item.id}>\r\n                                <img src={item.imgUrl} alt=\"\"/>\r\n                                <div className=\"text-context\">\r\n                                    {item.title}\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        \r\n        const mySwiper = new Swiper(this.swiper.current, {\r\n            direction : 'horizontal',\r\n            loop:true,\r\n        })\r\n    }\r\n}\r\n","import React, { PureComponent,createRef} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {requestContentData,requestMoreContentData} from './reducer'\r\nimport Swiper from 'swiper';    \r\nimport './style.scss'\r\n\r\nlet MainContentList = [];\r\nclass content extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.SWiper = createRef();\r\n    }\r\n    render() {\r\n        if(this.props.ContentList.length){\r\n            MainContentList = this.props.ContentList;\r\n        }\r\n        let ListDom = '';\r\n        let SwiperDom = '';\r\n        let restDom = '';\r\n\r\n        if(MainContentList.length){\r\n            SwiperDom =  (\r\n                <div className=\"hotnews\">\r\n                    <div className=\"title\">活动精选</div>\r\n                    <div className=\"swiper-container\" ref={this.SWiper}>\r\n                        <div className=\"swiper-wrapper\">\r\n                            {\r\n                                MainContentList.map(item=>(\r\n                                    <div className=\"swiper-slide\" key={item.id + 1} onClick={this.PushDetailRoute.bind(this,item.id,item.objectType)}>\r\n                                        <div className=\"bgimg\">\r\n                                            <img src={item.cover} alt=\"\"/>\r\n                                        </div>\r\n                                        <div className=\"text-desc\">全栈工程师线下培训课程</div>\r\n                                        <span className=\"eyes-more iconfont icon-xiaoyanjing\">{item.viewCount}</span>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n            ListDom = MainContentList.map((item,index) => {\r\n                if(index<=1){\r\n                     return (<li className=\"list border-bottom\" key={item.id} onClick={this.PushDetailRoute.bind(this,item.id,item.objectType)}>\r\n                        <div className=\"context\">\r\n                                <div className=\"title\">{item.title}</div>\r\n                                <div className=\"desc\">\r\n                                    <span className=\"eyes iconfont icon-xiaoyanjing\">{item.viewCount}</span>\r\n                                    <span className=\"author\">{item.creatorObj.username} {item.publishTimeDiffStr}</span>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"imgdesc\">\r\n                            <img src={item.cover} alt=\"\"/>\r\n                        </div>\r\n                    </li>)\r\n                }\r\n            })\r\n            restDom = MainContentList.map((item,index) => {\r\n                if(index<MainContentList.length && index>=2){\r\n                     return (<li className=\"list border-bottom\" key={item.id}>\r\n                        <div className=\"context\">\r\n                                <div className=\"title\">{item.title}</div>\r\n                                <div className=\"desc\">\r\n                                    <span className=\"eyes iconfont icon-xiaoyanjing\">{item.viewCount}</span>\r\n                                    <span className=\"author\">{item.creatorObj.username} {item.publishTimeDiffStr}</span>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"imgdesc\">\r\n                            <img src={item.cover} alt=\"\"/>\r\n                        </div>\r\n                    </li>)\r\n                }\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"homepages\">\r\n                <ul className=\"item\">\r\n                    {ListDom}\r\n                </ul>\r\n                {SwiperDom}\r\n                <ul className=\"item\">\r\n                    {restDom}\r\n                </ul>\r\n                <div className=\"list-footer\">\r\n                    <button className=\"Loadmore\" onClick={this.LoadMoreData.bind(this)}>\r\n                        查看更多\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    PushDetailRoute(id,objType){\r\n        this.props.props.history.push(`/home/detail/${id}${objType}`);\r\n    }   \r\n    LoadMoreData(){\r\n        this.props.getMoreContentData();\r\n    }\r\n    componentDidMount(){\r\n       this.FetchContentData();\r\n    }\r\n    componentDidUpdate(){\r\n        const swiper = new Swiper(this.SWiper.current, {\r\n            slidesPerView: 'auto',\r\n        });\r\n    }\r\n\r\n    async FetchContentData(){\r\n\r\n      try {\r\n            await this.props.getContentData();\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        ContentList: state.maincontent.ContentList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n      async getContentData(){\r\n        let action = requestContentData();\r\n        await dispatch(action);\r\n      },\r\n      getMoreContentData(){\r\n        let action = requestMoreContentData();\r\n        dispatch(action);\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(content);\r\n","import React, { Component} from 'react'\r\nimport Header from './children/header/header'\r\nimport Swiper from './children/Swiper/SwiperDemo'\r\nimport Content from './children/content/content'\r\nimport './style.scss'\r\nexport default class home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header props={this.props}/>\r\n                \r\n                <div className=\"content\" ref={(el)=>{this.scroll=el}}>\r\n                    <div className=\"wrap\">\r\n                        <Swiper/>\r\n                        <Content props={this.props}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        this.SCroll = new window.IScroll(this.scroll, {\r\n            probeType: 3,\r\n            scrollY:true,\r\n        })\r\n        this.SCroll.on('beforeScrollStart', ()=>{\r\n            this.SCroll.refresh();\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}