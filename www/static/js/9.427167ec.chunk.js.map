{"version":3,"sources":["pages/message/detail/children/comment.js","pages/message/detail/detail.js"],"names":["comment","console","log","this","props","CommentDom","CommentList","length","replyList","reply","replyDetail","map","item","className","author","username","ref","el","replycomment","key","id","src","avatar_path","alt","relativeTime","React","createElement","content_format","params","match","idtype","_params","substring","type","getCommentList","getHotCommentList","Component","detail","Dom","DetailInfoList","likelist","liDom","perhaps_like","likeDom","cover","title","content","liketimes","RollScroll","BSScroll","window","IScroll","probeType","scrollY","on","refresh","getDetailInfoData","innerHTML","connect","state","msdetailcontent","detailInfo","HotCommentList","hotcommentList","commentList","dispatch","action","requestDetailInfo","requestHotCommentList","requestCommentList"],"mappings":"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","file":"static/js/9.427167ec.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './comment.scss'\r\nexport default class comment extends Component {\r\n    render() {\r\n        console.log(this.props);\r\n        let CommentDom = '';\r\n        if(this.props.props.CommentList.length){\r\n            // 列表\r\n            let CommentList = this.props.props.CommentList;\r\n            // 回复列表\r\n            let replyList = this.props.props.CommentList.reply;\r\n            // 列表数据\r\n            let replyDetail = '';\r\n            if(replyList){\r\n                replyDetail = replyList.map(item=>{\r\n                    return (\r\n                        <div className=\"counter_comment\">\r\n                            <ul className=\"moreCommentList\">\r\n                                <li>\r\n                                    <p>\r\n                                        <span className=\"user\">{item.author.username}</span>\r\n                                        <span className=\"comment\" ref={(el)=>{this.replycomment = el}}></span>\r\n                                    </p>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            CommentDom = CommentList.map(item=>{\r\n                return (<li className=\"commentBackground\" key={item.id}>\r\n                    <div className=\"item_left_portrait\">\r\n                        <img src={item.author.avatar_path} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"item_right_box\">\r\n                        <div className=\"item_right_box_wrap\">\r\n                            <div className=\"item_right_box_author\">\r\n                                <span className=\"item_right_box_name\">{item.author.username}</span>\r\n                                <span className=\"item_right_box_time\">{item.relativeTime}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"discuss_content_box\">\r\n                            <div className=\"square_comment\">\r\n                                <div ref={(el)=>{this.replycomment = el}}>\r\n                                    {\r\n                                        (()=>{\r\n                                            let node = React.createElement('div',{},item.content_format);\r\n                                            {/* node.innerHTML = item.content_format;\r\n                                            console.log(node); */}  \r\n                                            return node;\r\n                                        })()\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {replyDetail}\r\n                    </div>\r\n                </li>)\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"comment_region\">\r\n                <div className=\"comment-top-hr\"></div>\r\n                <div className=\"comment-hot\"></div>\r\n                <div className=\"comment-new\">\r\n                    <div className=\"articlePadding\">\r\n                        <div className=\"brilliantCommentTop\">\r\n                            <span>最新评论</span>\r\n                        </div>\r\n                        <ul className=\"commentList\">\r\n                            {CommentDom}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        let params = this.props.props.match.params.idtype;\r\n        let id = params.substring(0,7);\r\n        let type = params.substring(7,params.length);\r\n        let _params = {id,type};\r\n        this.props.props.getCommentList(_params);\r\n        this.props.props.getHotCommentList(_params);\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Comment from './children/comment'\r\nimport {requestDetailInfo,requestHotCommentList,requestCommentList} from './reducer'\r\nimport './detail.scss'\r\n\r\nclass detail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let Dom = '';\r\n        if(this.props.DetailInfoList.likelist){\r\n            let DetailInfoList = this.props.DetailInfoList;\r\n            let likelist = this.props.DetailInfoList.likelist;\r\n            let perhaps_like = this.props.DetailInfoList.perhaps_like;\r\n            let liDom = '';\r\n            let likeDom = '';\r\n            let commentDom = '';\r\n\r\n            liDom = likelist.map(item=>{\r\n                return(\r\n                    <li className=\"point_list_ul_li\" key={item.id}>\r\n                        <img src={item.avatar_path} alt=\"\"/>\r\n                    </li>\r\n                )\r\n            })\r\n            if(perhaps_like){\r\n                likeDom = perhaps_like.map(item=>{\r\n                    return(\r\n                        <li className=\"point_list_ul_li\" key={item.id} id={item.author.id}>\r\n                            <div className=\"img-wrap-box\">\r\n                                <img src={item.cover} alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"articleInfo\">\r\n                                <p className=\"articleTitle\">\r\n                                    {item.title}\r\n                                </p>\r\n                                <p className=\"author\">\r\n                                    {item.author.username}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            Dom = (\r\n                <div className=\"wrap\">\r\n                    <div className=\"artical_banner\">\r\n                        <img src={DetailInfoList.cover} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <div className=\"ArticleDetails_author\">\r\n                            <div className=\"ArticleTop\">\r\n                                <div className=\"ArticleTop_img_box\">\r\n                                    <img src={DetailInfoList.author.avatar_path} alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"ArticleTop_center\">\r\n                                    {DetailInfoList.author.username}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"article\">\r\n                            <div className=\"articleTitle\">\r\n                                <p>一份关于 Switch 国行版的购买建议</p>\r\n                                <div className=\"article_from_time\">\r\n                                    11小时前 · 来自文章\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"article-text\">\r\n                                <div className=\"TextText\">\r\n                                    <div className=\"ArticleDetails_content\" ref={(el)=>{this.content = el}}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pointsList\">\r\n                            <div className=\"lovePoints_box\">\r\n                                <div className=\"point_wrap_box\">\r\n                                    <span className=\"iconfont icon-shoucang shoucang\"></span>\r\n                                </div>\r\n                                <div className=\"pointsTotal\">\r\n                                    {DetailInfoList.liketimes}人已赞\r\n                                </div>\r\n                                <ul className=\"point_list_ul\">\r\n                                    {liDom}\r\n                                    <li className=\"point_list_ul_li_last\">\r\n                                        <span className=\"point_list_ul_li_img_total\">\r\n                                            +{DetailInfoList.liketimes-likelist.length}\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"articlePadding\">\r\n                            <div className=\"maybeYouLike\">\r\n                                你可能会喜欢\r\n                            </div>\r\n                            <ul className=\"recommendArticles\">\r\n                                {likeDom}\r\n                            </ul>\r\n                        </div>\r\n                        <Comment props={this.props}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"pages\">\r\n                <div className=\"content\" ref={(el)=>{this.RollScroll = el}}>\r\n                    <div>\r\n                        {Dom}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        // 构建滚动视图\r\n        console.log(this.RollScroll);\r\n        this.BSScroll = new window.IScroll(this.RollScroll, {\r\n            probeType: 3,\r\n            scrollY:true,\r\n        })\r\n        this.BSScroll.on('beforeScrollStart', ()=>{\r\n            this.BSScroll.refresh();\r\n        });\r\n\r\n        let params = this.props.match.params.idtype;\r\n        let id = params.substring(0,7);\r\n        let type = params.substring(7,params.length);\r\n        let _params = {id,type};\r\n        this.props.getDetailInfoData(_params);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.content.innerHTML = this.props.DetailInfoList.content;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        DetailInfoList: state.msdetailcontent.detailInfo,\r\n        HotCommentList: state.msdetailcontent.hotcommentList,\r\n        CommentList: state.msdetailcontent.commentList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n      async getDetailInfoData(params){\r\n        let action = requestDetailInfo(params);\r\n        await dispatch(action);\r\n      },\r\n      async getHotCommentList(params){\r\n        let action = requestHotCommentList(params);\r\n        await dispatch(action);\r\n      },\r\n      async getCommentList(params){\r\n        let action = requestCommentList(params);\r\n        await dispatch(action);\r\n      },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(detail);"],"sourceRoot":""}