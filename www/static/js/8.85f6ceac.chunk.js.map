{"version":3,"sources":["pages/navigator/header/header.js","pages/navigator/content/content.js","pages/navigator/navigator/navigator.js"],"names":["Header","DefaultTabsList","this","props","TagList","tabs","title","length","forEach","item","obj","cate_name","push","className","onChange","tab","index","id","getNavigaterData","renderTabBar","DefaultTabBar","page","React","Component","loadmore","pages","content","NavigaterList","Navigater","ref","el","scroll","map","key","onClick","pushDetail","bind","src","cover","alt","liketimes","commentnum","relativeTime","column_id","type","console","log","params","history","SCroll","window","IScroll","probeType","scrollY","on","refresh","y","Math","abs","maxY","maxScrollY","minY","MINY","scrollTo","navigator","getTagData","connect","state","navicontent","dispatch","url","action","requestNavigaterData","requestTagList"],"mappings":"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","file":"static/js/8.85f6ceac.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Tabs, WhiteSpace } from 'antd-mobile';\r\nimport './header.scss'\r\n\r\nclass Header extends React.Component {\r\n/*   renderContent = tab =>\r\n    (<div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '150px', backgroundColor: '#fff' }}>\r\n      <p>Content of {tab.title}</p>\r\n    </div>); */\r\n\r\n  render() {\r\n    let DefaultTabsList = this.props.TagList.TagList;\r\n    let tabs = [{title:'全部'}];\r\n    if(DefaultTabsList.length){\r\n        DefaultTabsList.forEach(item => {\r\n            let title = item.cate_name;\r\n            let obj = {title:title};\r\n            tabs.push(obj);\r\n        });\r\n    }\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <Tabs tabs={tabs} \r\n        onChange={(tab, index) => {\r\n            if(index){\r\n              var id = DefaultTabsList[index-1].id\r\n            } else{\r\n              var id = 0;\r\n            }\r\n            this.props.TagList.getNavigaterData('/v1/news/'+id,1);\r\n        }}\r\n        renderTabBar={props => <Tabs.DefaultTabBar {...props} page={3} />}>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nexport default Header;","import React, { Component} from 'react'\r\nimport './content.scss'\r\nimport { Z_DEFAULT_STRATEGY } from 'zlib';\r\n\r\nlet loadmore = true;\r\nlet pages = 1;\r\nexport default class content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let NavigaterList = this.props.NavigaterList.Navigater;\r\n        return (\r\n            <div className=\"content\" ref={(el)=>{this.scroll=el}}>\r\n                <div className=\"wrap\">\r\n                    <ul className=\"list\">\r\n                    {\r\n                        NavigaterList.map(item=>{\r\n                            return(\r\n                                <li className=\"item\" key={item.id} onClick={this.pushDetail.bind(this,item.id,14)}>\r\n                                    <div className=\"item-desc\">\r\n                                        <div className=\"item-img\">\r\n                                            <img src={item.cover} alt=\"\"/>\r\n                                        </div>\r\n                                        <div className=\"item-content\">\r\n                                            <p>{item.title}</p>\r\n                                            <p>{item.content}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"item-info\">\r\n                                        <div className=\"thumbs\">\r\n                                            <span className=\"iconfont icon-dianzan\"><i>{item.liketimes}</i></span>\r\n                                            <span className=\"iconfont icon-xinxi\"><i>{item.commentnum}</i></span>\r\n                                        </div>\r\n                                        <div className=\"thumbs-info\">\r\n                                            <span className=\"thumbs-date\">{item.relativeTime}</span>\r\n                                            ·\r\n                                            <span className=\"thumbs-type\">{item.column_id}</span>\r\n                                        </div>\r\n                                    </div> \r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                    </ul>\r\n                    <div className=\"bottom-line\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    pushDetail(id,type){\r\n        console.log(this.props);\r\n        // let personId = this.props.props.match.params.uid;\r\n        let params = id+''+type;\r\n        console.log(params);\r\n\r\n        this.props.NavigaterList.history.push(`/navigation/detail/${params}`);\r\n    }\r\n    componentDidMount(){\r\n        this.SCroll = new window.IScroll(this.scroll, {\r\n            probeType: 3,\r\n            scrollY:true,\r\n        })\r\n        this.SCroll.on('beforeScrollStart', ()=>{\r\n            this.SCroll.refresh();\r\n        });\r\n        this.SCroll.on('scrollEnd',()=>{\r\n            let y = Math.abs(this.SCroll.y);\r\n            let maxY = Math.abs(this.SCroll.maxScrollY);\r\n            let minY = this.SCroll.maxScrollY + 90;\r\n            let MINY = Math.abs(minY);\r\n            if(y >= maxY){\r\n                if(loadmore){\r\n                    // 请求更多页的数据\r\n                    loadmore = false;\r\n                    pages++;\r\n                    this.props.NavigaterList.getNavigaterData('/v1/news/0',pages);\r\n                }\r\n                this.SCroll.scrollTo(0,minY,200);\r\n            } else if(y > MINY && y < maxY){\r\n                this.SCroll.scrollTo(0,minY,200);\r\n            } else{\r\n\r\n            }\r\n        })\r\n    }\r\n    componentDidUpdate(){\r\n        loadmore = true;\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport 'whatwg-fetch'\r\nimport {connect} from 'react-redux'\r\nimport {requestNavigaterData,requestTagList} from './reducer'\r\nimport Header from '../header/header'\r\nimport Content from '../content/content'\r\nclass navigator extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navigater\">\r\n                <Header TagList={this.props}/>\r\n                <Content NavigaterList={this.props}/>\r\n            </div>\r\n        )   \r\n    }\r\n    componentDidMount(){\r\n        this.props.getNavigaterData('/v1/news/0',1);\r\n        this.props.getTagData();\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        Navigater: state.navicontent.NavigaterList,\r\n        TagList:state.navicontent.TagList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n      getNavigaterData(url,params){\r\n        let action = requestNavigaterData(url,params);\r\n        dispatch(action);\r\n      },\r\n      getTagData(){\r\n        let action = requestTagList();\r\n        dispatch(action);\r\n      }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(navigator);"],"sourceRoot":""}